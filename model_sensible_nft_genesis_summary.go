/*
 * MetaSV API Spec
 *
 * API definition for MetaSV provided apis
 *
 * API version: 2.1.4
 * Contact: heqiming@metasv.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metasv

import (
	"encoding/json"
)

// SensibleNftGenesisSummary Get summary(count group by address) for specific genesis.
type SensibleNftGenesisSummary struct {
	// Owner address.
	Address *string `json:"address,omitempty"`
	// SensibleId of the token
	SensibleId *string `json:"sensibleId,omitempty"`
	// The metanet tx describing the nft.
	MetaTxid *string `json:"metaTxid,omitempty"`
	// Symbol of the token.
	MetaOutputIndex *int32 `json:"metaOutputIndex,omitempty"`
	// The total supply of this NFT.
	TokenSupply *int64 `json:"tokenSupply,omitempty"`
	// The count of this nft that the address owns.
	Count *int32 `json:"count,omitempty"`
}

// NewSensibleNftGenesisSummary instantiates a new SensibleNftGenesisSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSensibleNftGenesisSummary() *SensibleNftGenesisSummary {
	this := SensibleNftGenesisSummary{}
	return &this
}

// NewSensibleNftGenesisSummaryWithDefaults instantiates a new SensibleNftGenesisSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSensibleNftGenesisSummaryWithDefaults() *SensibleNftGenesisSummary {
	this := SensibleNftGenesisSummary{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *SensibleNftGenesisSummary) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensibleNftGenesisSummary) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *SensibleNftGenesisSummary) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *SensibleNftGenesisSummary) SetAddress(v string) {
	o.Address = &v
}

// GetSensibleId returns the SensibleId field value if set, zero value otherwise.
func (o *SensibleNftGenesisSummary) GetSensibleId() string {
	if o == nil || o.SensibleId == nil {
		var ret string
		return ret
	}
	return *o.SensibleId
}

// GetSensibleIdOk returns a tuple with the SensibleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensibleNftGenesisSummary) GetSensibleIdOk() (*string, bool) {
	if o == nil || o.SensibleId == nil {
		return nil, false
	}
	return o.SensibleId, true
}

// HasSensibleId returns a boolean if a field has been set.
func (o *SensibleNftGenesisSummary) HasSensibleId() bool {
	if o != nil && o.SensibleId != nil {
		return true
	}

	return false
}

// SetSensibleId gets a reference to the given string and assigns it to the SensibleId field.
func (o *SensibleNftGenesisSummary) SetSensibleId(v string) {
	o.SensibleId = &v
}

// GetMetaTxid returns the MetaTxid field value if set, zero value otherwise.
func (o *SensibleNftGenesisSummary) GetMetaTxid() string {
	if o == nil || o.MetaTxid == nil {
		var ret string
		return ret
	}
	return *o.MetaTxid
}

// GetMetaTxidOk returns a tuple with the MetaTxid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensibleNftGenesisSummary) GetMetaTxidOk() (*string, bool) {
	if o == nil || o.MetaTxid == nil {
		return nil, false
	}
	return o.MetaTxid, true
}

// HasMetaTxid returns a boolean if a field has been set.
func (o *SensibleNftGenesisSummary) HasMetaTxid() bool {
	if o != nil && o.MetaTxid != nil {
		return true
	}

	return false
}

// SetMetaTxid gets a reference to the given string and assigns it to the MetaTxid field.
func (o *SensibleNftGenesisSummary) SetMetaTxid(v string) {
	o.MetaTxid = &v
}

// GetMetaOutputIndex returns the MetaOutputIndex field value if set, zero value otherwise.
func (o *SensibleNftGenesisSummary) GetMetaOutputIndex() int32 {
	if o == nil || o.MetaOutputIndex == nil {
		var ret int32
		return ret
	}
	return *o.MetaOutputIndex
}

// GetMetaOutputIndexOk returns a tuple with the MetaOutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensibleNftGenesisSummary) GetMetaOutputIndexOk() (*int32, bool) {
	if o == nil || o.MetaOutputIndex == nil {
		return nil, false
	}
	return o.MetaOutputIndex, true
}

// HasMetaOutputIndex returns a boolean if a field has been set.
func (o *SensibleNftGenesisSummary) HasMetaOutputIndex() bool {
	if o != nil && o.MetaOutputIndex != nil {
		return true
	}

	return false
}

// SetMetaOutputIndex gets a reference to the given int32 and assigns it to the MetaOutputIndex field.
func (o *SensibleNftGenesisSummary) SetMetaOutputIndex(v int32) {
	o.MetaOutputIndex = &v
}

// GetTokenSupply returns the TokenSupply field value if set, zero value otherwise.
func (o *SensibleNftGenesisSummary) GetTokenSupply() int64 {
	if o == nil || o.TokenSupply == nil {
		var ret int64
		return ret
	}
	return *o.TokenSupply
}

// GetTokenSupplyOk returns a tuple with the TokenSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensibleNftGenesisSummary) GetTokenSupplyOk() (*int64, bool) {
	if o == nil || o.TokenSupply == nil {
		return nil, false
	}
	return o.TokenSupply, true
}

// HasTokenSupply returns a boolean if a field has been set.
func (o *SensibleNftGenesisSummary) HasTokenSupply() bool {
	if o != nil && o.TokenSupply != nil {
		return true
	}

	return false
}

// SetTokenSupply gets a reference to the given int64 and assigns it to the TokenSupply field.
func (o *SensibleNftGenesisSummary) SetTokenSupply(v int64) {
	o.TokenSupply = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SensibleNftGenesisSummary) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensibleNftGenesisSummary) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SensibleNftGenesisSummary) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *SensibleNftGenesisSummary) SetCount(v int32) {
	o.Count = &v
}

func (o SensibleNftGenesisSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.SensibleId != nil {
		toSerialize["sensibleId"] = o.SensibleId
	}
	if o.MetaTxid != nil {
		toSerialize["metaTxid"] = o.MetaTxid
	}
	if o.MetaOutputIndex != nil {
		toSerialize["metaOutputIndex"] = o.MetaOutputIndex
	}
	if o.TokenSupply != nil {
		toSerialize["tokenSupply"] = o.TokenSupply
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableSensibleNftGenesisSummary struct {
	value *SensibleNftGenesisSummary
	isSet bool
}

func (v NullableSensibleNftGenesisSummary) Get() *SensibleNftGenesisSummary {
	return v.value
}

func (v *NullableSensibleNftGenesisSummary) Set(val *SensibleNftGenesisSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableSensibleNftGenesisSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableSensibleNftGenesisSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSensibleNftGenesisSummary(val *SensibleNftGenesisSummary) *NullableSensibleNftGenesisSummary {
	return &NullableSensibleNftGenesisSummary{value: val, isSet: true}
}

func (v NullableSensibleNftGenesisSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSensibleNftGenesisSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
